apply plugin: 'com.android.application'
apply plugin: 'io.fabric'



android {
    signingConfigs {
        netpower {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('../netpower.jks')
            storePassword '123456'
        }
    }
    dexOptions {
//        声明是否预 dex 库依赖项以加快您的增量构建速度。
//        由于此功能可能减慢您的干净构建的速度，
//        您可能需要为持续性集成服务器停用此功能。
        preDexLibraries true
        //设置运行 dex-in-process 时要使用的最大线程数量
        maxProcessCount 8
        //设置 DEX 编译器的最大堆大小
        //javaMaxHeapSize "2048m"


    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
//    configurations.all {
//        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
//    }
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.example.fanyuanhua.netpower"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.netpower
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.netpower
        }


    }
    //多渠道命令打包所有平台的
    productFlavors {
        googlePlay {}
        tencent {}
        qihu360 {}
        baidu {
            applicationIdSuffix '.dev'
        }
        huawei {}
        xiaomi {}
        oppo {}
        vivo {}
        samsung {}
        meizu {}


    }

    // 自定义输出配置
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def formattedDate = new Date().format("yy_MM_dd", TimeZone.getTimeZone("UTC"))
            if (variant.buildType.name == 'release') {
                outputFileName = "NetPower_" + variant.productFlavors[0].name + "_${variant.versionName}.apk"
            } else if (variant.buildType.name == 'debug') {
                outputFileName = "NetPower_" + variant.productFlavors[0].name + "_${variant.buildType.name}" + "_${formattedDate}.apk"
            }
        }
    }



    productFlavors.all {
        flavor ->
            flavor.manifestPlaceholders = [
                    UMENG_CHANNEL_VALUE: name,
                    FABRIC_API_KEY     : "704c2ed990ae3edea47fffbf0aa1785dede6ab39",
                    APPFLYER_DEV_KEY   : "uWDevKNCFta9W2tPK3CMfP", //修改为当前应用的AppsFlyer开发ID
                    APPFLYER_CHANNEL   : name,]
    }
}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.7@aar') {
        transitive = true;
    }

    implementation 'com.android.support:appcompat-v7:28.+'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.jakewharton:butterknife:8.5.1'

    implementation 'com.android.support:design:28.+'
    implementation 'com.android.support:support-vector-drawable:28.+'
    implementation 'com.android.support:support-v4:28.+'
    implementation 'com.android.support:recyclerview-v7:28.+'
    testImplementation 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation 'com.daasuu:EasingInterpolator:1.0.0'
    //dagger
    annotationProcessor "com.google.dagger:dagger-compiler:2.15"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    implementation 'com.google.dagger:dagger:2.15'
    implementation 'com.google.dagger:dagger-android:2.15'
    implementation 'com.google.dagger:dagger-android-support:2.15'
    annotationProcessor "com.google.dagger:dagger-android-processor:2.15"
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    //Rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //logger
    implementation 'com.orhanobut:logger:2.1.1'
    //Gson
    implementation 'com.google.code.gson:gson:2.8.2'
    //leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    implementation project(':appsflyer')
    implementation 'com.android.support:multidex:1.0.3'
    androidTestImplementation 'com.android.support:multidex:1.0.3'
    androidTestImplementation 'com.android.support:multidex-instrumentation:1.0.3'
}
